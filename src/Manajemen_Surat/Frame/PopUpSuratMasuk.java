/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Manajemen_Surat.Frame;

import Manajemen_Surat.Kelas.Kategori;
import Manajemen_Surat.Kelas.Surat_Masuk;
import Manajemen_Surat.Frame.MenuUtama;
import Manajemen_Surat.Frame.MenuSampahSuratMasuk;
import Manajemen_Surat.Frame.MenuSuratMasuk;
import static Manajemen_Surat.Frame.MenuUtama.lb_Username;
import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

public class PopUpSuratMasuk extends javax.swing.JDialog {

    private Surat_Masuk sk;

    public PopUpSuratMasuk() throws SQLException {

        initComponents();

        blokirtextfieldTanggal();
        cbKategoriSurat();
        otoID();
        tTanggalDiterima.setDate(new Date());
        tTanggalDiterima.setLocale(new Locale("id"));
        tTanggalDiterima.setDateFormatString("dd MMMM yyyy");

    }

    public void ambilDetail() {

        tf_id.setText(Surat_Masuk.getId_surat());
        cb_Kategori.setSelectedItem(Surat_Masuk.getKategori());
        tf_NomorSurat.setText(Surat_Masuk.getNomor_surat());
        tf_pengirim.setText(Surat_Masuk.getPengirim());
        tf_Perihal.setText(Surat_Masuk.getPerihal());
        tTanggalDiterima.setDate(Surat_Masuk.getTanggal_diterima());
        txtfilepath.setText(Surat_Masuk.getFile_data());

    }

    public void otoID() {
        try {
            Surat_Masuk surat = new Surat_Masuk();
            String autoId = surat.otoID();

            if (autoId != null) {
                tf_id.setText(autoId);
            } else {
                tf_id.setText("1");
            }
        } catch (SQLException sQLException) {
            System.out.println("Error saat memperoleh ID otomatis: " + sQLException.getMessage());
            tf_id.setText("1");
        }
    }

    void reset() {

        cb_Kategori.setSelectedItem("--Pilih Kategori Surat--");
        tf_NomorSurat.setText(null);
        tf_pengirim.setText(null);
        tf_Perihal.setText(null);
        txtfilepath.setText(null);
    }

    void cbKategoriSurat() {
        try {
            PopUpSuratMasuk.this.cb_Kategori.addItem("--Pilih Kategori Surat--");

            Kategori ks = new Kategori();
            ResultSet data = ks.Tampil_CbKategoriSurat();

            while (data.next()) {
                PopUpSuratMasuk.this.cb_Kategori.addItem(data.getString("kode_kategori") + " - " + data.getString("nama_kategori"));
            }

            PopUpSuratMasuk.this.cb_Kategori.setSelectedItem("--Pilih Kategori Surat--");

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void blokirtextfieldTanggal() {

        if (tTanggalDiterima.getDateEditor() instanceof JTextFieldDateEditor) {
            JTextFieldDateEditor editorAwal = (JTextFieldDateEditor) tTanggalDiterima.getDateEditor();
            editorAwal.setEditable(false);
            editorAwal.setEnabled(false);
        }
    }

    private void updateView() {
        dispose();
        MenuUtama.pn_Utama.removeAll();
        MenuUtama.pn_Utama.add(new MenuSuratMasuk());
        MenuUtama.pn_Utama.repaint();
        MenuUtama.pn_Utama.revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tf_id = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cb_Kategori = new javax.swing.JComboBox<>();
        tf_NomorSurat = new javax.swing.JTextField();
        tf_Perihal = new javax.swing.JTextField();
        tf_pengirim = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtfilepath = new javax.swing.JTextArea();
        bUpload = new javax.swing.JButton();
        bTambah = new javax.swing.JButton();
        bt_Reset = new javax.swing.JButton();
        bEdit = new javax.swing.JButton();
        bHapus = new javax.swing.JButton();
        bOpen = new javax.swing.JButton();
        bt_Restore = new javax.swing.JButton();
        bt_HapusPermanen = new javax.swing.JButton();
        bt_Close = new javax.swing.JButton();
        tTanggalDiterima = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        jLabel1.setText("PopUp Surat Masuk");

        jLabel3.setText("Kategori");

        jLabel5.setText("Nomor Surat");

        jLabel6.setText("Tanggal Diterima");

        jLabel7.setText("Perihal");

        jLabel8.setText("Pengirim");

        txtfilepath.setColumns(20);
        txtfilepath.setRows(5);
        jScrollPane1.setViewportView(txtfilepath);

        bUpload.setBackground(new java.awt.Color(255, 153, 0));
        bUpload.setText("Upload File");
        bUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUploadActionPerformed(evt);
            }
        });

        bTambah.setBackground(new java.awt.Color(76, 175, 80));
        bTambah.setText("Tambah");
        bTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bTambahActionPerformed(evt);
            }
        });

        bt_Reset.setBackground(new java.awt.Color(158, 158, 158));
        bt_Reset.setText("Reset");

        bEdit.setBackground(new java.awt.Color(33, 150, 243));
        bEdit.setText("Ubah");
        bEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEditActionPerformed(evt);
            }
        });

        bHapus.setBackground(new java.awt.Color(244, 67, 54));
        bHapus.setText("Hapus");
        bHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bHapusActionPerformed(evt);
            }
        });

        bOpen.setBackground(new java.awt.Color(153, 153, 0));
        bOpen.setText("Lihat Surat");
        bOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bOpenActionPerformed(evt);
            }
        });

        bt_Restore.setBackground(new java.awt.Color(76, 175, 80));
        bt_Restore.setText("Restore");

        bt_HapusPermanen.setBackground(new java.awt.Color(244, 67, 54));
        bt_HapusPermanen.setText("Hapus Permanen");
        bt_HapusPermanen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_HapusPermanenActionPerformed(evt);
            }
        });

        bt_Close.setBackground(new java.awt.Color(0, 204, 204));
        bt_Close.setText("Close");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                        .addGap(278, 278, 278))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cb_Kategori, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tf_NomorSurat, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8))
                                .addGap(27, 27, 27)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tf_Perihal)
                                    .addComponent(tf_pengirim, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                                    .addComponent(tTanggalDiterima, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(bUpload)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(bt_Restore, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bt_HapusPermanen, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(bEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(bHapus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addComponent(bTambah, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jScrollPane1)
                                    .addComponent(bt_Reset, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(bOpen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bt_Close)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_pengirim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cb_Kategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tf_NomorSurat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tTanggalDiterima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(tf_Perihal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bUpload)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bTambah)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bt_Reset)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bEdit)
                    .addComponent(bHapus))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bOpen)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bt_Restore)
                    .addComponent(bt_HapusPermanen))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(bt_Close)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(534, 602));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void bUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUploadActionPerformed
         JFileChooser jfc = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Dokumen PDF", "pdf");
        jfc.setFileFilter(filter);
        jfc.setAcceptAllFileFilterUsed(false);

        int result = jfc.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            try {
                File selectedFile = jfc.getSelectedFile();
                String fileName = selectedFile.getName();
                String fileExtension = fileName.substring(fileName.lastIndexOf('.') + 1);

                if (!fileExtension.equalsIgnoreCase("pdf")) {
                    JOptionPane.showMessageDialog(null, "Hanya file PDF yang diizinkan!");
                    return;
                }

                String filepath = selectedFile.getAbsolutePath();
                filepath = filepath.replace('\\', '/');

                SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMddHHmmss");
                String timestamp = sdf.format(new Date());

                String newName = timestamp + "_" + fileName;

                String destinationPath = "./Upload/FileSuratMasuk/";
                txtfilepath.setText(destinationPath + newName);

                File destinationDirectory = new File(destinationPath);
                if (!destinationDirectory.exists()) {
                    destinationDirectory.mkdirs();
                }

                File destinationFile = new File(destinationDirectory, newName);
                Files.copy(selectedFile.toPath(), destinationFile.toPath(), StandardCopyOption.REPLACE_EXISTING);
            } catch (IOException e) {
                JOptionPane.showMessageDialog(null, "Gagal menyalin file: " + e.getMessage());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Terjadi kesalahan: " + e.getMessage());
            }
        } else {
            TimeJOption.AutoCloseJOptionPane.showMessageDialog("Tidak ada file yang dipilih", "Error", JOptionPane.ERROR_MESSAGE, 1000); 

        }
    }//GEN-LAST:event_bUploadActionPerformed

    private void bTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bTambahActionPerformed
         try {
            Surat_Masuk surat = new Surat_Masuk();

            String idSurat = tf_id.getText().trim();
            String pengirim = tf_pengirim.getText().trim();
            String kategori = cb_Kategori.getSelectedItem().toString();
            String nomorSurat = tf_NomorSurat.getText().trim();
            String perihal = tf_Perihal.getText().trim();
            java.util.Date tanggalDiterima = tTanggalDiterima.getDate();
            String filePath = txtfilepath.getText().trim();

            if (pengirim.isEmpty()) {
                TimeJOption.AutoCloseJOptionPane.showMessageDialog("Pengirim Surat harus diisi!", "Kesalahan", JOptionPane.WARNING_MESSAGE, 1000);
                return;
            }

            if (kategori.equals("--Pilih Kategori Surat--")) {
                TimeJOption.AutoCloseJOptionPane.showMessageDialog("Pilih kategori surat terlebih dahulu!", "Kesalahan", JOptionPane.WARNING_MESSAGE, 1000);
                return;
            }
             if (nomorSurat.isEmpty()) {
                TimeJOption.AutoCloseJOptionPane.showMessageDialog("Nomor Surat harus diisi!", "Kesalahan", JOptionPane.WARNING_MESSAGE, 1000);
                return;
            }
            if (perihal.isEmpty()) {
                TimeJOption.AutoCloseJOptionPane.showMessageDialog("Perihal harus diisi!", "Kesalahan", JOptionPane.WARNING_MESSAGE, 1000);
                return;
            }
            if (tanggalDiterima == null) {
                TimeJOption.AutoCloseJOptionPane.showMessageDialog("Tanggal Diterima harus diisi!", "Kesalahan", JOptionPane.WARNING_MESSAGE, 1000);
                return;
            }
            if (filePath.isEmpty()) {
                TimeJOption.AutoCloseJOptionPane.showMessageDialog("File Path harus diisi!", "Kesalahan", JOptionPane.WARNING_MESSAGE, 1000);
                return;
            }

            surat.setId_surat(idSurat);
            surat.setKategori(kategori);
            surat.setNomor_surat(nomorSurat);
            surat.setPengirim(pengirim);
            surat.setPerihal(perihal);
            surat.setTanggal_diterima(new java.sql.Date(tanggalDiterima.getTime()));
            surat.setFile_data(filePath);
            surat.setUser_login(MenuUtama.lb_Username.getText());
            surat.tambahSurat();

            otoID();
            reset();
            updateView();

        } catch (SQLException sQLException) {
            System.err.println("Data tidak masuk: " + sQLException.getMessage());
            TimeJOption.AutoCloseJOptionPane.showMessageDialog("Gagal menyimpan data surat: " + sQLException.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE, 1000);
        }
    }//GEN-LAST:event_bTambahActionPerformed

    private void bt_ResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_ResetActionPerformed
         reset();
    }//GEN-LAST:event_bt_ResetActionPerformed

    private void bEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEditActionPerformed
      try {
            Surat_Masuk surat = new Surat_Masuk();

            String idSurat = tf_id.getText().trim();
            if (idSurat.isEmpty()) {
              TimeJOption.AutoCloseJOptionPane.showMessageDialog("ID Surat harus diisi!", "Kesalahan", JOptionPane.WARNING_MESSAGE, 1000); // 1 detik
                return;
            }
            surat.setId_surat(idSurat);

            String pengirim = tf_pengirim.getText().trim();
            if (pengirim.isEmpty()) {
                TimeJOption.AutoCloseJOptionPane.showMessageDialog("Pengirim Surat harus diisi!", "Kesalahan", JOptionPane.WARNING_MESSAGE, 1000); // 1 detik
                return;
            }
            surat.setPengirim(pengirim);

            String kategori = cb_Kategori.getSelectedItem().toString();
            if (kategori.equals("--Pilih Kategori Surat--")) {
               TimeJOption.AutoCloseJOptionPane.showMessageDialog("Silahkan pilih kategori surat yang valid!", "Kesalahan", JOptionPane.WARNING_MESSAGE, 1000); // 1 detik
                return;
            }
            surat.setKategori(kategori);

            String nomorSurat = tf_NomorSurat.getText().trim();
            if (nomorSurat.isEmpty()) {
                 TimeJOption.AutoCloseJOptionPane.showMessageDialog("Nomor Surat harus diisi!", "Kesalahan", JOptionPane.WARNING_MESSAGE, 1000); // 1 detik
                return;
            }
            surat.setNomor_surat(nomorSurat);

            String perihal = tf_Perihal.getText().trim();
            if (perihal.isEmpty()) {
               TimeJOption.AutoCloseJOptionPane.showMessageDialog("Perihal Surat harus diisi!", "Kesalahan", JOptionPane.WARNING_MESSAGE, 1000); 
                return;
            }
            surat.setPerihal(perihal);

            java.util.Date tanggalDiterima = tTanggalDiterima.getDate();
            if (tanggalDiterima == null) {
                 TimeJOption.AutoCloseJOptionPane.showMessageDialog("Tanggal diterima tidak boleh kosong", "Kesalahan", JOptionPane.WARNING_MESSAGE, 1000); 
                return;
            }
            surat.setTanggal_diterima(new java.sql.Date(tanggalDiterima.getTime()));

            String filePath = txtfilepath.getText().trim();
            if (filePath.isEmpty()) {
                 TimeJOption.AutoCloseJOptionPane.showMessageDialog("File path harus diisi!", "Kesalahan", JOptionPane.WARNING_MESSAGE, 1000); 
                return;
            }
            surat.setFile_data(filePath);

            surat.ubahSurat();

        } catch (SQLException sQLException) {
            System.err.println("Data tidak masuk: " + sQLException.getMessage());
            TimeJOption.AutoCloseJOptionPane.showMessageDialog("Gagal mengubah data surat: " + sQLException.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE, 1000); 
        }

        updateView();
    }//GEN-LAST:event_bEditActionPerformed

    private void bHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHapusActionPerformed
           int response = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menghapus surat ini?", "Konfirmasi Penghapusan", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

        if (response == JOptionPane.YES_OPTION) {
            try {
                Surat_Masuk sur = new Surat_Masuk();
                sur.setId_surat(tf_id.getText());
                sur.KodeHapus();
                updateView();
                //   JOptionPane.showMessageDialog(null, "Surat berhasil dihapus.");
            } catch (SQLException sQLException) {
                 TimeJOption.AutoCloseJOptionPane.showMessageDialog( "Gagal menghapus surat: " + sQLException.getMessage(), "Error", JOptionPane.ERROR_MESSAGE, 1000);
            }
        } else if (response == JOptionPane.NO_OPTION) {
           TimeJOption.AutoCloseJOptionPane.showMessageDialog("Penghapusan dibatalkan.","Informasi",  JOptionPane.INFORMATION_MESSAGE,1000); 
        }
    }//GEN-LAST:event_bHapusActionPerformed

    private void bOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bOpenActionPerformed
         try {
            String filePath = txtfilepath.getText().trim();
            File file = new File(filePath);

            if (file.exists()) {
                Desktop.getDesktop().open(file);
            } else {
                TimeJOption.AutoCloseJOptionPane.showMessageDialog("File tidak ditemukan!", "Error", JOptionPane.ERROR_MESSAGE, 1000);
            }
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bOpenActionPerformed

    private void bt_RestoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_RestoreActionPerformed
         try {
            int response = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin memulihkan surat ini?", "Konfirmasi Pemulihan", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);

            if (response == JOptionPane.YES_OPTION) {
                Surat_Masuk kodeRestore = new Surat_Masuk();
                kodeRestore.setUser_login(MenuUtama.lb_Username.getText());
                kodeRestore.setId_surat(tf_id.getText());

                kodeRestore.KodeRestore();

                MenuSuratMasuk kt = new MenuSuratMasuk();
                kt.loadTabel();

                dispose();
                MenuUtama.pn_Utama.removeAll();
                MenuUtama.pn_Utama.add(new MenuSampahSuratMasuk());
                MenuUtama.pn_Utama.repaint();
                MenuUtama.pn_Utama.revalidate();

             //   JOptionPane.showMessageDialog(null, "Surat berhasil dipulihkan.");
            } else {
               TimeJOption.AutoCloseJOptionPane.showMessageDialog("Proses pemulihan surat dibatalkan.", "Informasi", JOptionPane.INFORMATION_MESSAGE, 1000); 

            }
        } catch (SQLException ex) {
            Logger.getLogger(PopUpSuratKeluar.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat memulihkan surat: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (ParseException ex) {
            Logger.getLogger(PopUpSuratKeluar.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat memproses data: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_bt_RestoreActionPerformed

    private void bt_HapusPermanenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_HapusPermanenActionPerformed
    try {
            int response = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menghapus surat ini secara permanen?", "Konfirmasi Penghapusan", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
            if (response == JOptionPane.YES_OPTION) {
                Surat_Masuk kodeHapus = new Surat_Masuk();
                kodeHapus.setUser_login(lb_Username.getText());
                kodeHapus.KodeSetUser();
                kodeHapus.setId_surat(tf_id.getText());
                kodeHapus.KodeHapusPermanen();

                MenuSuratMasuk kt = new MenuSuratMasuk();
                kt.loadTabel();

                dispose();
                MenuUtama.pn_Utama.removeAll();
                MenuUtama.pn_Utama.add(new MenuSampahSuratMasuk());
                MenuUtama.pn_Utama.repaint();
                MenuUtama.pn_Utama.revalidate();

              TimeJOption.AutoCloseJOptionPane.showMessageDialog("Surat berhasil dihapus secara permanen.", "Informasi", JOptionPane.INFORMATION_MESSAGE, 1000); 

            } else {
                TimeJOption.AutoCloseJOptionPane.showMessageDialog("Proses penghapusan surat dibatalkan.", "Informasi", JOptionPane.INFORMATION_MESSAGE, 1000); 
            }
        } catch (SQLException ex) {
            Logger.getLogger(PopUpSuratMasuk.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat menghapus surat: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        } catch (ParseException ex) {
            Logger.getLogger(PopUpSuratMasuk.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Terjadi kesalahan saat memproses data: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_bt_HapusPermanenActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PopUpSuratMasuk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PopUpSuratMasuk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PopUpSuratMasuk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PopUpSuratMasuk.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
           public void run() {
                try {
                    new PopUpSuratMasuk().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(PopUpSuratMasuk.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JButton bEdit;
    public javax.swing.JButton bHapus;
    public javax.swing.JButton bOpen;
    public javax.swing.JButton bTambah;
    private javax.swing.JButton bUpload;
    private javax.swing.JButton bt_Close;
    public javax.swing.JButton bt_HapusPermanen;
    public javax.swing.JButton bt_Reset;
    public javax.swing.JButton bt_Restore;
    public static javax.swing.JComboBox<String> cb_Kategori;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    public static com.toedter.calendar.JDateChooser tTanggalDiterima;
    public static javax.swing.JTextField tf_NomorSurat;
    public static javax.swing.JTextField tf_Perihal;
    private javax.swing.JTextField tf_id;
    public static javax.swing.JTextField tf_pengirim;
    public static javax.swing.JTextArea txtfilepath;
    // End of variables declaration//GEN-END:variables
}

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Manajemen_Surat.Frame;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFrame;

/**
 *
 * @author rizan
 */
public class MenuUtama extends javax.swing.JFrame {

    /**
     * Creates new form MenuUtama
     */
    public MenuUtama() {
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        execute();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pn_Sidebar = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        pn_Kanan = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        pn_Utama = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(51, 51, 255));

        jScrollPane1.setBorder(null);

        pn_Sidebar.setBackground(new java.awt.Color(51, 51, 255));
        pn_Sidebar.setLayout(new javax.swing.BoxLayout(pn_Sidebar, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane1.setViewportView(pn_Sidebar);

        jPanel4.setBackground(new java.awt.Color(51, 51, 255));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 72, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 696, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.LINE_START);

        pn_Kanan.setLayout(new java.awt.BorderLayout());

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1116, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 65, Short.MAX_VALUE)
        );

        pn_Kanan.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        jPanel3.setBackground(new java.awt.Color(153, 153, 0));

        pn_Utama.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pn_Utama, javax.swing.GroupLayout.DEFAULT_SIZE, 1104, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pn_Utama, javax.swing.GroupLayout.DEFAULT_SIZE, 697, Short.MAX_VALUE)
                .addContainerGap())
        );

        pn_Kanan.add(jPanel3, java.awt.BorderLayout.CENTER);

        getContentPane().add(pn_Kanan, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuUtama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuUtama().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pn_Kanan;
    private javax.swing.JPanel pn_Sidebar;
    private javax.swing.JPanel pn_Utama;
    // End of variables declaration//GEN-END:variables

    private void execute() {

        MenuItem menuLogBagian = new MenuItem(null, true, null, "Log Bagian", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    pn_Utama.removeAll();
                    pn_Utama.add(new MenuLogBagian());
                    pn_Utama.repaint();
                    pn_Utama.revalidate();
                } catch (ParseException ex) {
                    Logger.getLogger(MenuUtama.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

        MenuItem menuSampahBagian = new MenuItem(null, true, null, "Sampah Bagian", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_Utama.removeAll();
                pn_Utama.add(new MenuSampahBagian());
                pn_Utama.repaint();
                pn_Utama.revalidate();
            }
        });

        MenuItem menuLogKategori = new MenuItem(null, true, null, "Log Kategori", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    pn_Utama.removeAll();
                    pn_Utama.add(new MenuLogKategori());
                    pn_Utama.repaint();
                    pn_Utama.revalidate();
                } catch (ParseException ex) {
                    Logger.getLogger(MenuUtama.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

        MenuItem menuSampahKategori = new MenuItem(null, true, null, "Sampah Kategori", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_Utama.removeAll();
                pn_Utama.add(new MenuSampahKategori());
                pn_Utama.repaint();
                pn_Utama.revalidate();
            }
        });
        
        MenuItem menuSuratKeluar = new MenuItem(null, true, null, "Surat Keluar", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_Utama.removeAll();
                pn_Utama.add(new MenuSuratKeluar());
                pn_Utama.repaint();
                pn_Utama.revalidate();
            }
        });
                
        MenuItem menuLogSuratKeluar = new MenuItem(null, true, null, "Log Surat Keluar", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_Utama.removeAll();
                pn_Utama.add(new MenuLogSuratKeluar());
                pn_Utama.repaint();
                pn_Utama.revalidate();
            }
        });
        
        MenuItem menuSampahSuratKeluar = new MenuItem(null, true, null, "Sampah Surat Keluar", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_Utama.removeAll();
                pn_Utama.add(new MenuSampahSuratKeluar());
                pn_Utama.repaint();
                pn_Utama.revalidate();
            }
        });
        
        MenuItem menuLogSuratMasuk = new MenuItem(null, true, null, "Log Surat Masuk", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_Utama.removeAll();
                pn_Utama.add(new MenuLogSuratMasuk());
                pn_Utama.repaint();
                pn_Utama.revalidate();
            }
        });

        // Mengeksekusi Menu
        MenuItem menuBagian = new MenuItem(null, false, null, "Bagian", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_Utama.removeAll();
                pn_Utama.add(new MenuBagian());
                pn_Utama.repaint();
                pn_Utama.revalidate();
            }
        });

        MenuItem menuKategori = new MenuItem(null, false, null, "Kategori", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                pn_Utama.removeAll();
                pn_Utama.add(new MenuKategori());
                pn_Utama.repaint();
                pn_Utama.revalidate();
            }
        });

        
        MenuItem menuSurat                          = new MenuItem(null, false, null, "Surat", null, menuSuratKeluar);
        MenuItem menuLog                            = new MenuItem(null, false, null, "Log Aktifitas", null, menuLogBagian, menuLogKategori, menuLogSuratKeluar, menuLogSuratMasuk);
        MenuItem menuSampah                         = new MenuItem(null, false, null, "Sampah", null, menuSampahBagian, menuSampahKategori, menuSampahSuratKeluar);

        addMenu(menuBagian, menuKategori, menuSurat, menuLog, menuSampah);

    }

    private void addMenu(MenuItem... menu) {
        for (int i = 0; i < menu.length; i++) {
            pn_Sidebar.add(menu[i]);
            ArrayList<MenuItem> subMenu = menu[i].getSubMenu();
            for (MenuItem m : subMenu) {
                addMenu(m);
            }
        }
        pn_Sidebar.revalidate();
    }

}
